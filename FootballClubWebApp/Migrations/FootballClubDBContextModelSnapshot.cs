// <auto-generated />
using System;
using FootballClubWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootballClubWebApp.Migrations
{
    [DbContext(typeof(FootballClubDBContext))]
    partial class FootballClubDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FootballClubWebApp.BusinessLayer.CountryInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CountryInfos");
                });

            modelBuilder.Entity("FootballClubWebApp.BusinessLayer.Ranking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OperatingIncome")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<int?>("TeamInfoId")
                        .HasColumnType("int");

                    b.Property<int>("ValueInMillions")
                        .HasColumnType("int");

                    b.Property<int>("YearID")
                        .HasColumnType("int");

                    b.Property<int?>("YearInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamInfoId");

                    b.HasIndex("YearInfoId");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("FootballClubWebApp.BusinessLayer.TeamInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<int?>("CountryInfoId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryInfoId");

                    b.ToTable("TeamInfos");
                });

            modelBuilder.Entity("FootballClubWebApp.BusinessLayer.YearInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("YearName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("YearInfos");
                });

            modelBuilder.Entity("FootballClubWebApp.BusinessLayer.Ranking", b =>
                {
                    b.HasOne("FootballClubWebApp.BusinessLayer.TeamInfo", "TeamInfo")
                        .WithMany()
                        .HasForeignKey("TeamInfoId");

                    b.HasOne("FootballClubWebApp.BusinessLayer.YearInfo", "YearInfo")
                        .WithMany()
                        .HasForeignKey("YearInfoId");
                });

            modelBuilder.Entity("FootballClubWebApp.BusinessLayer.TeamInfo", b =>
                {
                    b.HasOne("FootballClubWebApp.BusinessLayer.CountryInfo", "CountryInfo")
                        .WithMany()
                        .HasForeignKey("CountryInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
